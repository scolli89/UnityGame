TODO List! 
What do we need to do first?

BUGS / ISSUES
	> ABLE TO CLIP THROUGH BRIDGE AND walk on water. 
	> BUILDERS NEED TO BE ABLE SHOOT THROUGH THEIR OWN WALLS.


> Get the guy to interact with the environment. 
	> Levers, Pressur plates, switches ? 
	> HAving those things AAA do stuff


> Need to get basic combat working. 
	> Health bar
	> Hit detection
	> Death
	> Death by environemnt? (Drowning, Out of bounds) 
	> Respawning
		 		
> We need a menu screen.
	> Controller support
	> Visual settings
	> Other stuff

> Create the rest of the game
	> Class system.
	> Enemy AI
	> Saving Game  progression_ 
	> PVP setup
	> Controller support
	> Game modes
	> Map and level design
	> Boss battles ? 


>> Pause menu

>> Wishlist
	>> have player UI elements ( health (which we are possibly thinking changing to shields and 1 health) and ammo.) toggle with a button push. 
		>>> shield displays/ shield numbers
		>>> number of power up charges. 
	>> Make the theme a space scifi with lasers and stuff?

	>> instead of a roll - use a dash: megaman dash frame, functions the same as roll, less animating. 	

	>> Character creation : 
		> 1 class
		> 1 Class mod
		> 1 passive
		> 1 fire style

		Class : Healer 
		Base Active : Heal close range players : specific mechanic? place a tile and the tile heals, or make an aura around the healer. 
		Mod 1: allow to heal from a distance by shooting : is really easy to do.
		Mod 2:heal yourself over time
		Mod 3:reserruct (yourself or someone else ?)
		XXXXXXX mod 4: heal player walls. 

		Class : Builder
		Base Active : Build temporary barrior
		Mod 1: builder can build from (longer away or a bigger wall)
		Mod 2: one way wall,
		Mod 3: bubble shield
		Mod 4: Friendly Drone? 

		Class : Shockwave  
		Base Active : Shockwave: who pushes people away with a shock wave or whatever. 
		Mod 1: shockwave bigger
		Mod 2: shockwave disables class abilities
		Mod 3:  shockwave is smaller, reflects projectiles?

		Passives:
		1: take more hits/ more shields / more health
		2: Movement Speed increase
		3: longer roll/ invicible roll/ teleport roll(teleport out of the map and die? ) / it is better, but you don't add an extra button to it. 
		4: Able to see NPC stats. / Makes all players able to see others stats/ health/ power level / gun type ?
		5: Power/ ammo recharges over time, but it starts very low or zero. 
		6: Shields recharge over time, but start very low. 
		7: Kills recharge powers
		8:
		9:

		Fire Styles:
		1: basic - decent fire rate moderate damage.
		2: Charged - Slower to shoot , deals more damage.
		3: forked - splits along the way.
		4: erasing shot - over powers other lasers, really slow.
		5: Corner turning shots - travels straight, then turns either by player or route 
		6:  remote control bomb
	
		
		



>> options to controll/balance class ability:
	> cool down timer, different for each in terms of balancing
		> limited ammo to encourage movement
		> ammo/power up located around map
			> randomly
			> calculated as furthest away from players
			> predetermined location under timer

	> charges on abilities : NOT take a passive abilities to give more uses to your class ability at the start of the game. 
		> more powerful abilities use more charges
		> charges are dropped at different points on the map
			> randomly
			> calculated as furthest away from players
			> predetermined location under timer



// Gathers information from the menu > menu controller. 
// GameCreator
Pass scriptable object called mc;
OR: Write to file with the specifics
load Scene
GameCreator.Start(){
	createGame(mc); 
	OR: Read from file. 
}
Code for Game creator class :
/// >>>> Need some way to save runtime data between scene loadings. 
// scriptableObject. > BUT not sure. 
/*
        player
            crosshair
            healthbar
            ammobar
                ones
                tebs
            ModManager: returns the active mod
                mod 1
                ...
                mod 12

        player
            crosshair
            healthbar
            ammobar
                ones
                tebs
            mod 1
            mod 2
            ...
            mod 12   
            // gun mods
            // passive mods
               


        MAX: 8 players/ 4 players. 
        8 * (12 -1 ) = 88
        Memory , if that is great. 



        Envisioned 
        public class gameCreator: monobehavior // okay if this is slow, because it is the set up. 
        {
            public int numPlayers;
            public Players[] players; 

            private class player {
                int classType; : 12
                int gunType; : 5
                int color; : 8

            }
	makePlayers(){
            foreach( Players player in players) {
                
                //some how create the player and
                p = Instainate( basic player prefab)
                if( player.classType == 2){
                    p.addChild(HEALER_SHOOTER_MOD);
		    p.ModSetup(); // which calls the playerclass = getChild(3).getComponent<PlayerClass>(); 
                }
                // there would be 12 of those
                ..
                // same stuff for guns and passives. 

            }
	}
            //Start game function.  
	GameSetUP(){
		if (gametype = "PVP"){
			players
		}
	}	
	
            // menu -> need to fill booleans so that this game creater has an idea as to how to build the scene. 
        }
    */






TO DONE! LIST


> Need to get shooting to work.
	> Bow and arrow sprites.
	> Aiming
	> Firing
	> wall hit detection. 
	> animations for aiming and shooting. 

> Need to set up a basic testing environment.
	> We need to import a tile set. 
	> Background tiles
	> Boarder tiles that prevent exit from the stage. 
	> Walled tiles. 

> Get a guy moving around.
	> We need to import a character sprites 
	> We need to write the script to move the guy
	> Set up the sprite animation of the characte

> Get the guy to interact with the environment. 
	> Prevent walking through walls for a start

	
